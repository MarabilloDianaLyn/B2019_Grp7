@model AI_TaskM.Models.MainTask

@{
    ViewBag.Title = "ViewTask";
}

<h2>ViewTask</h2>
@{
    var str = Model.DueDate.ToString("MMM dd,yyyy");

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MainTask</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.DueDate, new
           {
               htmlAttributes = new
               {
                   @class = "form-control datepicker",
                   @Value = str
               }
           })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-md-12" style="height:200px; overflow-y:auto">
            <table id="ExpTable" class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th>Description</th>
                        <th>Done</th>
                        <th>
                            <button id='btnaddDesc' type="button" class="btn btn-sm btn-primary visible-lg"
                                    onclick="AddItem(this)">
                                Add
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.ToDos.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.EditorFor(x => x.ToDos[i].Description, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                <div class="checkbox">
                                    @Html.EditorFor(x => x.ToDos[i].isDone)
                                </div>
                            </td>
                            <td>
                                <button id='btnremove-@i' type="button" class="btn btn-sm btn-danger visible-lg"
                                        onclick="DeleteItem(this)">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <p>total checked:</p>
            <span id="selected"></span>
            <span id="percent"></span>
        </div>

        <input type="hidden" id="hdnLastIndex" value="0" />

        <div class="col-12 btn-group">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        

    </script>
    <script>
        var checkboxes = document.querySelectorAll('.check-box');
        var count = 0;
        var chcklength = checkboxes.length();

        $(function () {
            $(".datepicker").datepicker({
                dateFormat: "MM dd,yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-3:+3",
                showOn: "both",
                buttonText: "Select"
            });
        });


        function DeleteItem(btn) {
            chcklength - 1;

            var table = document.getElementById('ExpTable');
            var rows = table.getElementsByTagName('tr');
            if (rows.length == 2) {
                alert("This row cannot be deleted");
                return;
            }

            var btnIdx = btn.id.replaceAll('btnremove-', '');
            var idOfDes = btnIdx + "__Description";
            var txtDes = document.querySelector("[id$='" + idOfDes + "']");
            txtDes.value = 0;

            $(btn).closest('tr').hide();

            var checkboxes = document.querySelectorAll('.check-box');
            var count = 0;

            for (var i = 0; i < checkboxes.length; i--) {
                checkboxes[i].addEventListener('click', function () {
                    if (this.checked == true) {
                        count++;
                    } else {
                        count--;
                    }
                    document.getElementById('selected').innerHTML = count;
                    var percentage = (100 * count) / checkboxes.length;
                    document.getElementById('percent').innerHTML = percentage;
                })
            }

        }

        function AddItem(btn) {
            chcklength + 1;

            var table = document.getElementById('ExpTable');
            var rows = table.getElementsByTagName('tr');

            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastrowIdx = rows.length - 2;
            var nextrowIdx = eval(lastrowIdx) + 1;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var x = document.getElementsByTagName("INPUT");

            for (var cnt = 0; cnt < x.length; cnt++) {
                if (x[cnt].type == "text" && x[cnt].id.indexOf('_' + nextrowIdx + '_') > 0)
                    x[cnt].value = '';
            }



        }

        

        for (var i = 0; i < checkboxes.length; i++) {
            checkboxes[i].addEventListener('click', function () {
                if (this.checked == true) {
                    count++;
                } else {
                    count--;
                }
                document.getElementById('selected').innerHTML = count;
                var percentage = (100 * count) / checkboxes.length;
                document.getElementById('percent').innerHTML = percentage;
            })
        }

    </script>
}